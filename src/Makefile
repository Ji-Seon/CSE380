
EXEC := main #Name of executable created
SRC  := $(wildcard *.cpp) # Finds all .cpp matching files and substitutes
OBJ  := $(patsubst %.c,%.o,$(SRC)) # Finds all obj created by .c and .o files from SRC


#Options
CC      := gcc # Use GNU c compiler
LDFLAGS := -L/TACC_GSL_LIB -L/TACC_GRVY_LIB # Define gsl & grvy library
INC     := -I/TACC_GSL_INC # Define path to find library
LDLIBS  := -lm -lgsl -lcblas -lgrvy         # Links math library

#Rules

# Target (Name of file generated by the program): Prerequisites (Input files used to create the target)
#       Command (Action)

# Default goal is tardis so we place this rule first:
$(EXEC): $(OBJ)
	$(CC) $(INC) $(LDFLAGS) $(LDLIBS) -o $@ $^
# $@ - Target of current rule
# $^ - Prerequisites of current rule
# $< - First prerequisite of current rule

%.o: %.cpp
	$(CC) -c $<

# List all the objective and header files used here:
main.o simpleODE.o: simpleODE.h

# Useful phony targets
.PHONY: clobber clean neat echo
clobber: clean
	$(RM) $(EXEC)

# Clean deletes the current executable and any object files attributed
clean: neat
	$(RM) $(OBJ)
neat:
	$(RM) *~ .*~
echo:
	@echo $(OBJ)
